<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>linux on Guilherme Pedrosa</title>
    <link>https://gtpedrosa.github.io/tags/linux/</link>
    <description>Recent content in linux on Guilherme Pedrosa</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Mon, 11 Sep 2023 22:53:00 -0300</lastBuildDate>
    
	<atom:link href="https://gtpedrosa.github.io/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Transfer files between computers using python and lftp</title>
      <link>https://gtpedrosa.github.io/blog/transfer-files-between-computers-using-python-and-lftp/</link>
      <pubDate>Mon, 11 Sep 2023 22:53:00 -0300</pubDate>
      
      <guid>https://gtpedrosa.github.io/blog/transfer-files-between-computers-using-python-and-lftp/</guid>
      <description>I have found a neat way to transfer single files or whole folders between two computers in the same network.
On one PC, turn it into an HTTP server:
python3 -m http.server And find its IPV4 address. Use ipconfig (Windows) or ifconfig (Linux).
Finally, using a browser in the other PC, access the server on http://my_ip:8000. From there, you can navigate the file system and download single files easily or download whole folders using lftp:</description>
    </item>
    
    <item>
      <title>Offline python documentation with Zeal and doc2dash</title>
      <link>https://gtpedrosa.github.io/blog/offline-python-documentation-with-zeal-and-doc2dash/</link>
      <pubDate>Tue, 13 Sep 2022 23:35:00 -0300</pubDate>
      
      <guid>https://gtpedrosa.github.io/blog/offline-python-documentation-with-zeal-and-doc2dash/</guid>
      <description>While working on a python project today, the internet connection went down. For a while, I couldn&amp;rsquo;t reference some API documentation online. This got me thinking: could I have them all offline? Later on (with connection!), I have found the answer: an offline documentation tool called Zeal.
If the project you are working on is popular, there are already docsets available for download. This will make the documentation for a given package accessible in the blink of an eye!</description>
    </item>
    
    <item>
      <title>Using moderncv on Debian Fresh Installation</title>
      <link>https://gtpedrosa.github.io/blog/using-moderncv-on-debian-fresh-installation/</link>
      <pubDate>Mon, 22 Aug 2022 23:05:00 -0300</pubDate>
      
      <guid>https://gtpedrosa.github.io/blog/using-moderncv-on-debian-fresh-installation/</guid>
      <description>The easiest way to install a minimal LaTeX installation to use moderncv was using the debian package repository:
sudo apt install texlive sudo apt install texlive-lang-portuguese Note to self: I tried to install the vanilla texlive systemwide without the full installation (~7Gb) by using the graphical capability if install-tl but could not get tlmgr to work properly, even after adding the installation path to my .bashrc.</description>
    </item>
    
    <item>
      <title>Setting up Debian 11 on my HP Pavillion dv7-6199us</title>
      <link>https://gtpedrosa.github.io/blog/setting-up-debian-11-on-my-hp-pavillion-dv7-6199us/</link>
      <pubDate>Sun, 20 Mar 2022 17:46:00 -0300</pubDate>
      
      <guid>https://gtpedrosa.github.io/blog/setting-up-debian-11-on-my-hp-pavillion-dv7-6199us/</guid>
      <description>The HP Pavillion dv7-6199us has been my notebook for over 10 years. I accidentally trashed my system and could not fix it when it crashed during an upgrade. This led me to format it over, which was long due. Taking advantage of my previous experience with my other HP, the 246, I tried to install Debian 11 instead of Ubuntu. Here are my other findings during the OS switch.
Debian does not come with non-libre software.</description>
    </item>
    
    <item>
      <title>Fixing ever-growing kern.log, messages and syslog files on Debian</title>
      <link>https://gtpedrosa.github.io/blog/fixing-ever-growing-kern.log-messages-and-syslog-files-on-debian/</link>
      <pubDate>Sun, 06 Mar 2022 22:49:00 -0300</pubDate>
      
      <guid>https://gtpedrosa.github.io/blog/fixing-ever-growing-kern.log-messages-and-syslog-files-on-debian/</guid>
      <description>After a Fresh install of Debian, I was suddenly surprised by the current lack of disk space to save a file. This post is a memo for my future self of how I managed to solve this issue.
In summary, the lack of disk space was caused by ever-growing logging messages stored on three files located in /var/log: messages, kern.log, and syslog. What messages? Specifically these:
guilherme@gtpedrosa: sudo tail syslog Mar 5 12:11:50 gtpedrosa kernel: [ 256.</description>
    </item>
    
    <item>
      <title>Installing Linux on HP 246 G6</title>
      <link>https://gtpedrosa.github.io/blog/installing-linux-on-hp-246-g6/</link>
      <pubDate>Sat, 29 Jan 2022 15:43:00 -0300</pubDate>
      
      <guid>https://gtpedrosa.github.io/blog/installing-linux-on-hp-246-g6/</guid>
      <description>Trying to speed-up my notebook HP 246 G6, I decided to upgrade my HD to a SSD. While at it, I have also decided to switch from Windows to Ubuntu. However, things did not go as smooth as I thought they would.
Firstly, I could not flash a new Ubuntu image successfully on my 16GB CruzerBlade thumbdrive. I used the Balena Etcher electron app. In case you have never used it before, just issue the following in the command line to get it running:</description>
    </item>
    
  </channel>
</rss>